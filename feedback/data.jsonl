{"generated_code": "use std::collections::HashMap;\n\n#[derive(Clone, Copy, PartialEq, Eq)]\nenum Progress {\n    None,\n    Some,\n...\nfn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {\n    map.values().fold(0, |acc, val| {\n        if *val == value {\n            acc + 1\n        }\n        acc\n    })\n}\n...\n        other.insert(String::from(\"try_from_into\"), None);\n\n        vec![map, other]\n    }\n}", "rating": 4, "error": "error[E0308]: mismatched types\n  --> exercises/standard_library_types/iterators5.rs:35:13\n   |\n34 | /         if *val == value {\n35 | |             acc + 1\n   | |             ^^^^^^^ expected `()`, found `usize`\n36 | |         }\n   | |_________- expected this to be `()`\n...\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.", "correct_min": 1, "right_code": "use std::collections::HashMap;\n\n#[derive(Clone, Copy, PartialEq, Eq)]\nenum Progress {\n    None,\n    Some,\n...\nfn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {\n    map.values().fold(0, |acc, val| {\n        if *val == value {\n            return acc + 1;\n        }\n        acc\n    })\n}\n...\n        other.insert(String::from(\"try_from_into\"), None);\n\n        vec![map, other]\n    }\n}"}
